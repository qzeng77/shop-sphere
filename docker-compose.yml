x-common-variables: &common-variables
  volumes:
    - ./services/${SERVICE_NAME}/src:/app/src
    - ./services/${SERVICE_NAME}/target:/app/target

services:
  mysql:
    image: mysql:8
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: shopdb
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  postgres:
    image: postgres:14
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: shopuser
      POSTGRES_PASSWORD: shoppass
      POSTGRES_DB: shopdb
    ports:
      - "5432:5432"

  mongodb:
    image: mongo
    container_name: mongo-db
    restart: always
    ports:
      - "27017:27017"

  cassandra:
    image: cassandra
    container_name: cassandra-db
    restart: always
    ports:
      - "9042:9042"

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka-broker
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  service-registry:
    build:
      context: .
      dockerfile: service-registry/Dockerfile
    container_name: service-registry
    ports:
      - "8761:8761"
    networks:
      - default
    environment:
      - EUREKA_INSTANCE_HOSTNAME=service-registry
      - EUREKA_DEFAULT_ZONE=http://service-registry:8761/eureka/
    volumes:
      - maven-repo:/root/.m2
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s


  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8080:8080"
    networks:
      - default
    volumes:
      - maven-repo:/root/.m2
    depends_on:
      service-registry:
          condition: service_healthy
    environment:
      - EUREKA_DEFAULT_ZONE=http://service-registry:8761/eureka/


  # 业务服务
  account-service:
    build:
      context: .
      dockerfile: services/account-service/Dockerfile
      args:
        SERVICE_NAME: account-service
    volumes:
      - maven-repo:/root/.m2
    networks:
      - default
    container_name: account-service
    <<: *common-variables
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/shopdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_DEFAULT_ZONE=http://service-registry:8761/eureka/


  order-service:
    build:
      context: .
      dockerfile: services/order-service/Dockerfile
      args:
        SERVICE_NAME: order-service
    networks:
      - default
    volumes:
      - maven-repo:/root/.m2
    container_name: order-service
    <<: *common-variables
    ports:
      - "8084:8084"
    depends_on:
      cassandra:
        condition: service_healthy
      kafka:
        condition: service_healthy
      service-registry:
          condition: service_healthy
    environment:
      - SPRING_CASSANDRA_CONTACT_POINTS=cassandra
      - SPRING_CASSANDRA_PORT=9042
      - SPRING_CASSANDRA_KEYSPACE=shopdb
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EUREKA_DEFAULT_ZONE=http://service-registry:8761/eureka/

  payment-service:
    build:
      context: .
      dockerfile: services/payment-service/Dockerfile
      args:
        SERVICE_NAME: payment-service
    networks:
      - default
    volumes:
      - maven-repo:/root/.m2
    container_name: payment-service
    <<: *common-variables
    ports:
      - "8085:8085"
    depends_on:
      postgres:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/shopdb
      - SPRING_DATASOURCE_USERNAME=shopuser
      - SPRING_DATASOURCE_PASSWORD=shoppass
      - EUREKA_DEFAULT_ZONE=http://service-registry:8761/eureka/

  item-service:
    build:
      context: .
      dockerfile: services/item-service/Dockerfile
      args:
        SERVICE_NAME: item-service
    networks:
      - default
    volumes:
      - maven-repo:/root/.m2
    container_name: item-service
    <<: *common-variables
    ports:
      - "8083:8083"
    depends_on:
      mongodb:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/shopdb
      - EUREKA_DEFAULT_ZONE=http://service-registry:8761/eureka/

  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
      args:
        SERVICE_NAME: auth-service
    networks:
      - default
    volumes:
      - maven-repo:/root/.m2
    container_name: auth-service
    <<: *common-variables
    ports:
      - "8082:8082"
    depends_on:
#      - mysql
      service-registry:
          condition: service_healthy
    environment:
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/shopdb
#      - SPRING_DATASOURCE_USERNAME=root
#      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_DEFAULT_ZONE=http://service-registry:8761/eureka/

volumes:
  maven-repo: {}
